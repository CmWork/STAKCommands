<?xml version="1.0" encoding="UTF-8"?>
<test>
  <testInfo displayName="Routing Multi-Protocol" description="Routing Multi-Protocol Methodology" methodologyKey="MULTIPROTO" testCaseName="original" testCaseDescription="description specific to this test case" version="1.0" testCaseKey="">
    <labels>
      <label>bgp</label>
      <label>control plane</label>
      <label>route reflector</label>
      <label>x-connect</label>
    </labels>
  </testInfo>
  <testResources>
    <resourceGroups>
      <resourceGroup displayName="Port Group Limits" id="">
        <!-- Per-port-group limits for validation -->
        <attribute name="minNumPorts" value="2" />
        <attribute name="maxNumPorts" value="10" />
        <attribute name="portSpeedList" value="['10', '40', '100']" />
      </resourceGroup>
      <resourceGroup displayName="Chassis Info" id="chassisInfo">
        <portGroups>
          <portGroup name="Left Port Group" id="LeftPortTag">
            <template name="BGP Provider Edge">
              <description>Source BGP IPv4 Provider Edge Template</description>
              <image name="diagram.png" />
              <source name="BGP_IPv4_Source_PE.xml" />
            </template>
            <port name="Left Port">
              <attribute name="location" value="10.109.114.195/1/1" />
            </port>
          </portGroup>
          <portGroup name="Right Port Group" id="RightPortTag">
            <template name="BGP Route Reflector">
              <description>Receiver BGP IPv4 Provider Edge Template</description>
              <image name="diagram.png" />
              <source name="BGP_IPv4_Receiver_PE.xml" />
            </template>
            <port name="Right Port">
              <attribute name="location" value="10.109.117.75/1/1" />
            </port>
          </portGroup>
        </portGroups>
      </resourceGroup>
    </resourceGroups>
  </testResources>
  <!--
    The wizard section defines the input parameters that the test consumer
    will be allowed to modify at run time. The format of this section is 
    designed to allow a rendering engine to create a simple wizard for
    collecting information from the test consumer during localization.

    Each page of the wizard has an optional imageName that can be used to 
    render an image file in the wizard as an aid to the user.
  -->

<!-- enumerations -->
  <enumerations>
    <enumeration id="InterfaceStack">
<!--      <enum name="IPv4" displayName="IPv4"/>
      <enum name="IPV6" displayName="IPv6"/> -->
      <enum name="DUAL" displayName="Dual"/>
    </enumeration>
    <enumeration id="IpVersion">
      <enum name="IPV4" displayName="IPv4" />
      <enum name="IPV6" displayName="IPv6" />
    </enumeration>
    <enumeration id="BfdScaleMode">
      <enum name="NORMAL" displayName="Normal" />
      <enum name="GEN_TX_NO_RESULTS" displayName="GenTx (No Results)" />
      <enum name="GEN_TX_RX_RESULTS" displayName="GenTx (With Rx Results)" />
    </enumeration>
    <enumeration id="OspfNetworkType">
      <enum name="NATIVE" displayName="Native" />
      <enum name="P2P" displayName="P2P" />
      <enum name="BROADCAST" displayName="Broadcast" />
    </enumeration>
    <enumeration id="IsisNetworkType">
      <enum name="P2P" displayName="P2P" />
      <enum name="BROADCAST" displayName="Broadcast" />
    </enumeration>
    <enumeration id="LdpHelloVersion">
      <enum name="LDP_IPV4_HELLO" displayName="IPv4" />
      <enum name="LDP_IPV6_HELLO" displayName="IPv6" />
      <enum name="LDP_IPV4_AND_IPV6_HELLO" displayName="IPv4 and IPv6" />
    </enumeration>
    <enumeration id="TestType">
      <enum name="SCALABILITY" displayName="Scalability" />
      <enum name="BENCHMARK" displayName="Benchmarking" />
    </enumeration>
    <enumeration id="IteratorMode">
      <enum name="STEP" displayName="Step" />
      <enum name="BINARY" displayName="Binary" />
    </enumeration>
  </enumerations>

  <wizard displayName="Widget Test" description="Examples of custom widgets" image="diagram.png">
  
   <!--- TEST CONFIGURATION SECTION -->
    <page displayName="Device Count Search Space Configuration" description="Configure the Device Count search space" image="diagram.png"> 
      <group displayName="">
        <property id="MethTestType" value="SCALABILITY" displayName="Test Type" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
          <enumerationRef ref="TestType" />
        </property>
        <property id="ScalabilityDeviceCount" value="10" displayName="Scalability Device Count" widgetType="textbox" type="int" ignoreOnBackEnd="true" />
      </group>
      <group displayName="Benchmarking Search Parameters">
        <property id="TestMethodologyIteratorMode" value="STEP" displayName="Mode" widgetType="dropdown" type="enum">
          <enumerationRef ref="IteratorMode" />
        </property>
        <property id="DeviceCountMin" value="1" displayName="Min Device Count" widgetType="textbox" type="int" ignoreOnBackEnd="true" />
        <property id="DeviceCountMax" value="100" displayName="Max Device Count" widgetType="textbox" type="int" ignoreOnBackEnd="true" />
        <property id="TestMethodologyIteratorStepVal" value="10" displayName="Device Count Step" widgetType="textbox" type="int" />
      </group>
      <group displayName="Stability Backoff Parameters">
        <property id="TestMethodologyIteratorEnableStabilityBackoff" value="False" displayName="Enable Stability Check" widgetType="checkbox" type="bool" />
        <property id="TestMethodologyIteratorStabilityRepeatCount" value="1" displayName="Trial Repeat Count" widgetType="textbox" type="int" />
        <property id="TestMethodologyIteratorStabilitySuccessPercent" value="100" displayName="Percent of Passing Trials for Success" widgetType="textbox" type="int" />
      </group>
    </page>
    
    <!-- INTERFACE & PROTOCOL ENABLE SECTION -->
    <page displayName="Setup Protocol Mix Configuration" description="Configure Device and Routing Protocols properties for Multi-Protocol test" image="diagram.png"> 
      <group displayName="Left Device Configuration">
        <table id="table1">
          <property id="Left.CreateProtocolMix.InterfaceStack" value="DUAL" displayName="Interface Stack" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="InterfaceStack" />
            <data>DUAL</data>
          </property>
          <property id="Left.CreateProtocolMix.EnableVlan" value="True" displayName="Enable Vlan" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>True</data>
          </property>
          <property id="Left.CreateProtocolMix.VlanId" value="100" displayName="Vlan Id" widgetType="textbox" type="uint64" ignoreOnBackEnd="true">
            <data>100</data>
            <numericValidation minInclusive="1" maxInclusive="4095" />
          </property>
          <property id="Left.CreateProtocolMix.VlanIdStep" value="1" displayName="Vlan Id Step" widgetType="textbox" type="uint64" ignoreOnBackEnd="true">
            <data>1</data>
            <numericValidation minInclusive="1" maxInclusive="4095" />
          </property>
        </table>
      </group>
      <group displayName="Right Device Configuration">
        <table id="table2">
          <property id="Right.CreateProtocolMix.InterfaceStack" value="DUAL" displayName="Interface Stack" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="InterfaceStack" />
            <data>DUAL</data>
          </property>
          <property id="Right.CreateProtocolMix.EnableVlan" value="True" displayName="Enable Vlan" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>True</data>
          </property>
          <property id="Right.CreateProtocolMix.VlanId" value="100" displayName="Vlan Id" widgetType="textbox" type="uint64" ignoreOnBackEnd="true">
            <data>100</data>
            <numericValidation minInclusive="1" maxInclusive="4095" />
          </property>
          <property id="Right.CreateProtocolMix.VlanIdStep" value="1" displayName="Vlan Id Step" widgetType="textbox" type="uint64" ignoreOnBackEnd="true">
            <data>1</data>
            <numericValidation minInclusive="1" maxInclusive="4095" />
          </property>
        </table>
      </group>
      <group displayName="Left Device Configuration">
        <table id="table3">
          <property id="Left.CreateProtocolMix.Ipv4Addr" value="11.11.11.22" displayName="Start IPv4 Address" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>1.1.1.1</data>
          </property>
          <property id="Left.CreateProtocolMix.Ipv4AddrStep" value="0.0.0.1" displayName="IPv4 Address Step" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>0.0.1.0</data>
          </property>
          <property id="Left.CreateProtocolMix.Ipv4GwAddr" value="11.11.11.11" displayName="Start IPv4 Gateway Address" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>1.1.1.2</data>
          </property>
          <property id="Left.CreateProtocolMix.Ipv4GwAddrStep" value="0.0.0.1" displayName="IPv4 Gateway Address Step" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>0.0.1.0</data>
          </property>
          <property id="Left.CreateProtocolMix.Ipv6Addr" value="2000::2" displayName="Start IPv6 Address" widgetType="textbox" type="ipv6" ignoreOnBackEnd="true">
            <data>2222::2</data>
          </property>
          <property id="Left.CreateProtocolMix.Ipv6AddrStep" value="::1:0" displayName="IPv6 Address Step" widgetType="textbox" type="ipv6" ignoreOnBackEnd="true">
            <data>::1:0</data>
          </property>
          <property id="Left.CreateProtocolMix.Ipv6GwAddr" value="2000::1" displayName="Start IPv6 Gateway Address" widgetType="textbox" type="ipv6" ignoreOnBackEnd="true">
            <data>2222::1</data>
          </property>
          <property id="Left.CreateProtocolMix.Ipv6GwAddrStep" value="::1:0" displayName="IPv6 Gateway Address Step" widgetType="textbox" type="ipv6" ignoreOnBackEnd="true">
            <data>::1:0</data>
          </property>
          <property id="Left.CreateProtocolMix.LLAddr" value="fe80::2" displayName="Link-Local Address" widgetType="textbox" type="ipv6" ignoreOnBackEnd="true">
            <data>fe80::1:2</data>
          </property>
          <property id="Left.CreateProtocolMix.LLAddrStep" value="::1:0" displayName="Link-Local Address Step" widgetType="textbox" type="ipv6" ignoreOnBackEnd="true">
            <data>::1:0</data>
          </property>
          <property id="Left.CreateProtocolMix.Ipv4RtrId" value="100.0.0.1" displayName="Start Router Id" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>100.0.0.1</data>
          </property>
          <property id="Left.CreateProtocolMix.Ipv4RtrIdStep" value="0.0.0.1" displayName="Router Id Step" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>0.0.0.1</data>
          </property>
          <property id="Left.CreateProtocolMix.MacAddr" value="00:10:95:00:00:01" displayName="Start MAC Address" widgetType="textbox" type="mac" ignoreOnBackEnd="true">
            <data>00:10:95:00:00:01</data>
          </property>
          <property id="Left.CreateProtocolMix.MacAddrStep" value="00:00:00:00:00:01" displayName="MAC Address Step" widgetType="textbox" type="mac" ignoreOnBackEnd="true">
            <data>00:00:00:00:00:01</data>
          </property>
        </table>
      </group>
      <group displayName="Right Device Configuration">
        <table id="table4">
          <property id="Right.CreateProtocolMix.Ipv4Addr" value="11.11.11.11" displayName="Start IPv4 Address" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>1.1.1.2</data>
          </property>
          <property id="Right.CreateProtocolMix.Ipv4AddrStep" value="0.0.0.1" displayName="IPv4 Address Step" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>0.0.1.0</data>
          </property>
          <property id="Right.CreateProtocolMix.Ipv4GwAddr" value="11.11.11.22" displayName="Start IPv4 Gateway Address" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>1.1.1.1</data>
          </property>
          <property id="Right.CreateProtocolMix.Ipv4GwAddrStep" value="0.0.0.1" displayName="IPv4 Gateway Address Step" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>0.0.1.0</data>
          </property>
          <property id="Right.CreateProtocolMix.Ipv6Addr" value="2000::1" displayName="Start IPv6 Address" widgetType="textbox" type="ipv6" ignoreOnBackEnd="true">
            <data>2222::1</data>
          </property>
          <property id="Right.CreateProtocolMix.Ipv6AddrStep" value="::1:0" displayName="IPv6 Address Step" widgetType="textbox" type="ipv6" ignoreOnBackEnd="true">
            <data>::1:0</data>
          </property>
          <property id="Right.CreateProtocolMix.Ipv6GwAddr" value="2000::2" displayName="Start IPv6 Gateway Address" widgetType="textbox" type="ipv6" ignoreOnBackEnd="true">
            <data>2222::2</data>
          </property>
          <property id="Right.CreateProtocolMix.Ipv6GwAddrStep" value="::1:0" displayName="IPv6 Gateway Address Step" widgetType="textbox" type="ipv6" ignoreOnBackEnd="true">
            <data>::1:0</data>
          </property>
          <property id="Right.CreateProtocolMix.LLAddr" value="fe80::1" displayName="Link-Local Address" widgetType="textbox" type="ipv6" ignoreOnBackEnd="true">
            <data>fe80::1:1</data>
          </property>
          <property id="Right.CreateProtocolMix.LLAddrStep" value="::1:0" displayName="Link-Local Address Step" widgetType="textbox" type="ipv6" ignoreOnBackEnd="true">
            <data>::1:0</data>
          </property>
          <property id="Right.CreateProtocolMix.Ipv4RtrId" value="100.0.0.1" displayName="Start Router Id" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>100.10.0.1</data>
          </property>
          <property id="Right.CreateProtocolMix.Ipv4RtrIdStep" value="0.0.0.1" displayName="Router Id Step" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>0.0.0.1</data>
          </property>
          <property id="Right.CreateProtocolMix.MacAddr" value="00:10:95:00:00:01" displayName="Start MAC Address" widgetType="textbox" type="mac" ignoreOnBackEnd="true">
            <data>00:11:95:00:00:01</data>
          </property>
          <property id="Right.CreateProtocolMix.MacAddrStep" value="00:00:00:00:00:01" displayName="MAC Address Step" widgetType="textbox" type="mac" ignoreOnBackEnd="true">
            <data>00:00:00:00:00:01</data>
          </property>
        </table>
      </group>
      <group displayName="Left Protocol Selection">
        <table id="table5">
          <property id="Left.CreateProtocolMix.Weight" value="100 %" displayName="Weight (%)" widgetType="textbox" type="string" ignoreOnBackEnd="true">
            <data>100 %</data>
          </property>
          <property id="Left.CreateProtocolMix.DevicesPerBlock" value="1" displayName="Devices Per Block" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <data>1</data>
          </property>
          <property id="Left.CreateProtocolMix.EnableBgp" value="False" displayName="Enable BGP" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
          <property id="Left.CreateProtocolMix.EnableOspfv2" value="False" displayName="Enable OSPFv2" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
          <property id="Left.CreateProtocolMix.EnableOspfv3" value="False" displayName="Enable OSPFv3" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
          <property id="Left.CreateProtocolMix.EnableLdp" value="False" displayName="Enable LDP" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
          <property id="Left.CreateProtocolMix.EnableIsis" value="False" displayName="Enable ISIS" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
        </table>
      </group>
      <group displayName="Right Protocol Selection">
        <table id="table6">
          <property id="Right.CreateProtocolMix.Weight" value="100 %" displayName="Weight" widgetType="textbox" type="string" ignoreOnBackEnd="true">
            <data>100 %</data>
          </property>
          <property id="Right.CreateProtocolMix.DevicesPerBlock" value="1" displayName="Devices Per Block" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <data>1</data>
          </property>
          <property id="Right.CreateProtocolMix.EnableBgp" value="False" displayName="Enable BGP" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
          <property id="Right.CreateProtocolMix.EnableOspfv2" value="False" displayName="Enable OSPFv2" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
          <property id="Right.CreateProtocolMix.EnableOspfv3" value="False" displayName="Enable OSPFv3" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
          <property id="Right.CreateProtocolMix.EnableLdp" value="False" displayName="Enable LDP" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
          <property id="Right.CreateProtocolMix.EnableIsis" value="False" displayName="Enable ISIS" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
        </table>
      </group>
    </page>
    
    <!-- PROTOCOL PARAMETER CONFIGURATION SECTION -->
    <page displayName="Setup Protocol Properties" description="Configure Protocols properties for Multi-Protocol test" image="diagram.png"> 
      <group displayName="BFD Configuration">
        <table id="bfd1">
          <property id="CreateProtocolMix.BfdScaleMode" value="NORMAL" displayName="Scale Mode" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="BfdScaleMode" />
            <data>NORMAL</data>
          </property>
          <property id="CreateProtocolMix.BfdTxInterval" value="50" displayName="Tx Interval (msec)" widgetType="textbox" type="uint64" ignoreOnBackEnd="true">
            <data>50</data>
          </property>
          <property id="CreateProtocolMix.BfdRxInterval" value="50" displayName="Rx Interval (msec)" widgetType="textbox" type="uint64" ignoreOnBackEnd="true">
            <data>50</data>
          </property>
          <property id="CreateProtocolMix.BfdDetectMultiplier" value="3" displayName="Detect Multiplier" widgetType="textbox" type="uint64" ignoreOnBackEnd="true">
            <data>3</data>
          </property>
        </table>
      </group>

      <group displayName="Left BGP Configuration">
        <table id="bgp1">
          <property id="Left.CreateProtocolMix.BgpIpVersion" value="IPV4" displayName="IP Version" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="IpVersion" />
            <data>IPV4</data>
          </property>
          <property id="Left.CreateProtocolMix.BgpAsNum" value="10" displayName="AS Num" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <data>100</data>
          </property>
          <property id="Left.CreateProtocolMix.BgpAsNumStep" value="1" displayName="AS Num Step" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <data>1</data>
          </property>
          <property id="Left.CreateProtocolMix.BgpDutAsNum" value="10" displayName="DUT AS Num" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <data>100</data>
          </property>
          <property id="Left.CreateProtocolMix.BgpDutAsNumStep" value="1" displayName="DUT AS Num Step" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <data>1</data>
          </property>
          <property id="Left.CreateProtocolMix.EnableBgpBfd" value="False" displayName="Enable BFD" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
        </table>
      </group>
      <group displayName="Right BGP Configuration">
        <table id="bgp2">
          <property id="Right.CreateProtocolMix.BgpIpVersion" value="IPV4" displayName="IP Version" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="IpVersion" />
            <data>IPV4</data>
          </property>
          <property id="Right.CreateProtocolMix.BgpAsNum" value="10" displayName="AS Num" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <data>100</data>
          </property>
          <property id="Right.CreateProtocolMix.BgpAsNumStep" value="1" displayName="AS Num Step" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <data>1</data>
          </property>
          <property id="Right.CreateProtocolMix.BgpDutAsNum" value="10" displayName="DUT AS Num" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <data>100</data>
          </property>
          <property id="Right.CreateProtocolMix.BgpDutAsNumStep" value="1" displayName="DUT AS Num Step" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <data>1</data>
          </property>
          <property id="Right.CreateProtocolMix.EnableBgpBfd" value="False" displayName="Enable BFD" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
        </table>
      </group>
      
      <group displayName="Left OSPFv2 Configuration">
        <table id="opspfv21">
          <property id="Left.CreateProtocolMix.Ospfv2AreaId" value="0.0.0.0" displayName="Area Id" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>1.0.0.0</data>
          </property>
          <property id="Left.CreateProtocolMix.Ospfv2AreaIdStep" value="0.0.0.1" displayName="Area Id Step" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>0.0.0.1</data>
          </property>
          <property id="Left.CreateProtocolMix.Ospfv2RouterPriority" value="0" displayName="Router Priority" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <numericValidation minInclusive="0" maxInclusive="255" />
            <data>0</data>
          </property>
          <property id="Left.CreateProtocolMix.Ospfv2NetworkType" value="P2P" displayName="NetworkType" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="OspfNetworkType" />
            <data>P2P</data>
          </property>
          <property id="Left.CreateProtocolMix.EnableOspfv2Bfd" value="False" displayName="Enable BFD" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
        </table>
      </group>
      <group displayName="Right OSPFv2 Configuration">
        <table id="ospfv22">
          <property id="Right.CreateProtocolMix.Ospfv2AreaId" value="0.0.0.0" displayName="Area Id" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>1.0.0.0</data>
          </property>
          <property id="Right.CreateProtocolMix.Ospfv2AreaIdStep" value="0.0.0.1" displayName="Area Id Step" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>0.0.0.1</data>
          </property>
          <property id="Right.CreateProtocolMix.Ospfv2RouterPriority" value="0" displayName="Router Priority" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <numericValidation minInclusive="0" maxInclusive="255" />
            <data>0</data>
          </property>
          <property id="Right.CreateProtocolMix.Ospfv2NetworkType" value="P2P" displayName="NetworkType" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="OspfNetworkType" />
            <data>P2P</data>
          </property>
          <property id="Right.CreateProtocolMix.EnableOspfv2Bfd" value="False" displayName="Enable BFD" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
        </table>
      </group>
      
      <group displayName="Left OSPFv3 Configuration">
        <table id="ospfv31">
          <property id="Left.CreateProtocolMix.Ospfv3AreaId" value="0.0.0.0" displayName="Area Id" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>1.0.0.0</data>
          </property>
          <property id="Left.CreateProtocolMix.Ospfv3AreaIdStep" value="0.0.0.1" displayName="Area Id Step" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>0.0.0.1</data>
          </property>
          <property id="Left.CreateProtocolMix.Ospfv3RouterPriority" value="0" displayName="Router Priority" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <numericValidation minInclusive="0" maxInclusive="255" />
            <data>0</data>
          </property>
          <property id="Left.CreateProtocolMix.Ospfv3NetworkType" value="P2P" displayName="NetworkType" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="OspfNetworkType" />
            <data>P2P</data>
          </property>
          <property id="Left.CreateProtocolMix.EnableOspfv3Bfd" value="False" displayName="Enable BFD" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
        </table>
      </group>
      <group displayName="Right OSPFv3 Configuration">
        <table id="ospfv32">
          <property id="Right.CreateProtocolMix.Ospfv3AreaId" value="0.0.0.0" displayName="Area Id" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>1.0.0.0</data>
          </property>
          <property id="Right.CreateProtocolMix.Ospfv3AreaIdStep" value="0.0.0.1" displayName="Area Id Step" widgetType="textbox" type="ipv4" ignoreOnBackEnd="true">
            <data>0.0.0.1</data>
          </property>
          <property id="Right.CreateProtocolMix.Ospfv3RouterPriority" value="0" displayName="Router Priority" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <numericValidation minInclusive="0" maxInclusive="255" />
            <data>0</data>
          </property>
          <property id="Right.CreateProtocolMix.Ospfv3NetworkType" value="P2P" displayName="NetworkType" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="OspfNetworkType" />
            <data>P2P</data>
          </property>
          <property id="Right.CreateProtocolMix.EnableOspfv3Bfd" value="False" displayName="Enable BFD" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
        </table>
      </group>
      
      <group displayName="Left LDP Configuration">
        <table id="ldp1">
          <property id="Left.CreateProtocolMix.LdpHelloVersion" value="LDP_IPV4_HELLO" displayName="Hello Version" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="LdpHelloVersion" />
            <data>LDP_IPV4_HELLO</data>
          </property>
          <property id="Left.CreateProtocolMix.EnableLdpBfd" value="False" displayName="Enable BFD" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
        </table>
      </group>
      <group displayName="Right LDP Configuration">
        <table id="ldp2">
          <property id="Right.CreateProtocolMix.LdpHelloVersion" value="LDP_IPV4_HELLO" displayName="Hello Version" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="LdpHelloVersion" />
            <data>LDP_IPV4_HELLO</data>
          </property>
          <property id="Right.CreateProtocolMix.EnableLdpBfd" value="False" displayName="Enable BFD" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
        </table>
      </group>

      <group displayName="Left ISIS Configuration">
        <table id="isis1">
<!--          <property id="Left.CreateProtocolMix.IsisIpVersion" value="IPV4" displayName="IP Version" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="IpVersion" />
            <data>IPV4</data>
          </property> -->
          <property id="Left.CreateProtocolMix.IsisRouterPriority" value="0" displayName="Router Priority" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <numericValidation minInclusive="0" maxInclusive="127" />
            <data>0</data>
          </property>
          <property id="Left.CreateProtocolMix.IsisNetworkType" value="P2P" displayName="NetworkType" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="IsisNetworkType" />
            <data>P2P</data>
          </property>
          <property id="Left.CreateProtocolMix.EnableIsisBfd" value="False" displayName="Enable BFD" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
        </table>
      </group>
      <group displayName="Right ISIS Configuration">
        <table id="isis2">
<!--          <property id="Right.CreateProtocolMix.IsisIpVersion" value="IPV4" displayName="IP Version" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="IpVersion" />
            <data>IPV4</data>
          </property> -->
          <property id="Right.CreateProtocolMix.IsisRouterPriority" value="0" displayName="Router Priority" widgetType="textbox" type="int" ignoreOnBackEnd="true">
            <numericValidation minInclusive="0" maxInclusive="127" />
            <data>0</data>
          </property>
          <property id="Right.CreateProtocolMix.IsisNetworkType" value="P2P" displayName="NetworkType" widgetType="dropdown" type="enum" ignoreOnBackEnd="true">
            <enumerationRef ref="IsisNetworkType" />
            <data>P2P</data>
          </property>
          <property id="Right.CreateProtocolMix.EnableIsisBfd" value="False" displayName="Enable BFD" widgetType="checkbox" type="bool" ignoreOnBackEnd="true">
            <data>False</data>
          </property>
        </table>
      </group>
    </page>

    <!-- ROUTES & TRAFFIC PARAMETERS SECTION -->
    <page displayName="Routes and Traffic Configuration" description="Configure Routes and Traffic Settings" image="diagram.png">
      <group displayName="Route Configuration">
        <property id="TotalRouteCount" value="100" displayName="Total Route Count" widgetType="textbox" type="uint64" ignoreOnBackEnd="true" />
        <property id="Left.CreateRouteMix.MixInfo" displayName="Left Route Mix Info (JSON input)" description="Left Side Route Mix Info" value="{&quot;routeCount&quot;:1000,&quot;components&quot;:[{&quot;baseTemplateFile&quot;:&quot;AllRouters.xml&quot;,&quot;weight&quot;:&quot;100%&quot;,&quot;modifyList&quot;:[{&quot;mergeList&quot;:[{&quot;mergeSourceTag&quot;:&quot;ttBgpIpv4RouteConfig&quot;,&quot;mergeSourceTemplateFile&quot;:&quot;AllRoutes.xml&quot;,&quot;mergeTargetTag&quot;:&quot;ttBgpRouterConfig&quot;},{&quot;mergeSourceTag&quot;:&quot;ttBgpIpv6RouteConfig&quot;,&quot;mergeSourceTemplateFile&quot;:&quot;AllRoutes.xml&quot;,&quot;mergeTargetTag&quot;:&quot;ttBgpRouterConfig&quot;}],&quot;stmPropertyModifierList&quot;:[{&quot;className&quot;:&quot;Ipv4NetworkBlock&quot;,&quot;propertyName&quot;:&quot;StartIpList&quot;,&quot;parentTagName&quot;:&quot;ttBgpIpv4RouteConfig.Ipv4NetworkBlock&quot;,&quot;propertyValueList&quot;:{&quot;Start&quot;:&quot;22.22.22.22&quot;,&quot;Step&quot;:&quot;0.0.1.0&quot;}}]}]}]}" type="string"/>
        <property id="Right.CreateRouteMix.MixInfo" displayName="Right Route Mix Info (JSON input)" description="Right Side Route Mix Info" value="{&quot;routeCount&quot;:1000,&quot;components&quot;:[{&quot;baseTemplateFile&quot;:&quot;AllRouters.xml&quot;,&quot;weight&quot;:&quot;100%&quot;,&quot;modifyList&quot;:[{&quot;mergeList&quot;:[{&quot;mergeSourceTag&quot;:&quot;ttBgpIpv4RouteConfig&quot;,&quot;mergeSourceTemplateFile&quot;:&quot;AllRoutes.xml&quot;,&quot;mergeTargetTag&quot;:&quot;ttBgpRouterConfig&quot;},{&quot;mergeSourceTag&quot;:&quot;ttBgpIpv6RouteConfig&quot;,&quot;mergeSourceTemplateFile&quot;:&quot;AllRoutes.xml&quot;,&quot;mergeTargetTag&quot;:&quot;ttBgpRouterConfig&quot;}],&quot;stmPropertyModifierList&quot;:[{&quot;className&quot;:&quot;Ipv4NetworkBlock&quot;,&quot;propertyName&quot;:&quot;StartIpList&quot;,&quot;parentTagName&quot;:&quot;ttBgpIpv4RouteConfig.Ipv4NetworkBlock&quot;,&quot;propertyValueList&quot;:{&quot;Start&quot;:&quot;33.33.33.33&quot;,&quot;Step&quot;:&quot;0.0.1.0&quot;}}]}]}]}" type="string"/>
      </group>
      <group displayName="Traffic Configuration">
        <property id="SetTrafficLoad" value="10" displayName="Traffic Load" widgetType="textbox" type="uint64" ignoreOnBackEnd="true" />
        <property id="SetTrafficLoadUnit" value="PERCENT_LINE_RATE" displayName="Traffic Load Units" widgetType="textbox" type="string" ignoreOnBackEnd="true" />
        <property id="Left.CreateTrafficMix.MixInfo" displayName="Left-to-Right Traffic Mix Info (JSON input)" description="Left Side Traffic Mix Info" value="{&quot;load&quot;:1,&quot;loadUnits&quot;:&quot;PERCENT_LINE_RATE&quot;,&quot;components&quot;:[{&quot;weight&quot;:&quot;100%&quot;,&quot;baseTemplateFile&quot;:&quot;IPv4_Stream.xml&quot;,&quot;postExpandModify&quot;:[{&quot;streamBlockExpand&quot;:{&quot;endpointMapping&quot;:{&quot;bidirectional&quot;:false,&quot;srcBindingClassList&quot;:[&quot;Ipv4NetworkBlock&quot;],&quot;srcBindingTagList&quot;:[&quot;Left_ttStmRouteMix&quot;],&quot;dstBindingClassList&quot;:[&quot;Ipv4NetworkBlock&quot;],&quot;dstBindingTagList&quot;:[&quot;Right_ttStmRouteMix&quot;]}}}]}]}" type="string"/>
        <property id="Right.CreateTrafficMix.MixInfo" displayName="Right-to-Left Traffic Mix Info (JSON input)" description="Right Side Traffic Mix Info" value="{&quot;load&quot;:1,&quot;loadUnits&quot;:&quot;PERCENT_LINE_RATE&quot;,&quot;components&quot;:[{&quot;weight&quot;:&quot;100%&quot;,&quot;baseTemplateFile&quot;:&quot;IPv4_Stream.xml&quot;,&quot;postExpandModify&quot;:[{&quot;streamBlockExpand&quot;:{&quot;endpointMapping&quot;:{&quot;bidirectional&quot;:false,&quot;srcBindingClassList&quot;:[&quot;Ipv4NetworkBlock&quot;],&quot;srcBindingTagList&quot;:[&quot;Right_ttStmRouteMix&quot;],&quot;dstBindingClassList&quot;:[&quot;Ipv4NetworkBlock&quot;],&quot;dstBindingTagList&quot;:[&quot;Left_ttStmRouteMix&quot;]}}}]}]}" type="string"/>
      </group>
    </page>
  
    <!-- GENERAL TEST PARAMETERS SECTION -->
    <page displayName="Test Configuration" description="Configure General Test Settings" image="diagram.png">
      <group displayName="General Test Parameters">
        <property id="SamplingPollSubscriptionResultsCommand3MaximumPollingPeriodS" value="60" displayName="Protocol Establishment Wait Time (s)" widgetType="textbox" type="uint64" />
        <property id="SamplingPollSubscriptionResultsCommand4MaximumPollingPeriodS" value="60" displayName="Protocol Stability Duration (s)" widgetType="textbox" type="uint64" />
        <property id="SamplingPollSubscriptionResultsCommand6MaximumPollingPeriodS" value="10" displayName="Traffic Duration (s)" widgetType="textbox" type="uint64" />
      </group>
      <group displayName="PLACEHOLDER TODO: for future parameter support">
        <property id="FrameSize" value="128" displayName="Frame Size (bytes)" widgetType="textbox" type="uint64" ignoreOnBackEnd="true" />
        <property id="CheckFrameLossResult" value="False" displayName="Enable Check for Frame Loss" widgetType="checkbox" type="bool" ignoreOnBackEnd="true" />
        <property id="CheckDeadStreamResults" value="False" displayName="Enable Check for Dead Streams/Flows" widgetType="checkbox" type="bool" ignoreOnBackEnd="true" />
        <property id="EnableTrafficSetting" value="False" displayName="Enable Traffic" widgetType="checkbox" type="bool" ignoreOnBackEnd="true" />
        <property id="EnableArpSetting" value="False" displayName="Enable ARP/ND (Learning))" widgetType="checkbox" type="bool" ignoreOnBackEnd="true" />
      </group>
    </page>
  </wizard>
  
  <processingFunctions>
      <!-- SrcId MUST map to a property that appears in the wizard section.  This will be passed in dictionary form to the processing function -->
      <!-- scriptVarName is the name to be used in the dictionary.  If not specified, the SrcId as a string will be used. -->
      <!-- Default specifies a constant value that will be passed directly into the processing function when srcId is not specified. -->

      <processingDictionary inputDict=
        '{
            "id": "Left.CreateProtocolMix.TableData",
            "scriptFile": "txml_processing_functions.py",
            "entryFunction": "config_protocol_table_data",
            "input": {
                "customDict": {
                    "EnableVlan": "Left.CreateProtocolMix.EnableVlan",
                    "Weight": "Left.CreateProtocolMix.Weight",
                    "DeviceCount": "ScalabilityDeviceCount",
                    "DevPerBlock": "Left.CreateProtocolMix.DevicesPerBlock",
                    "TagPrefix": "Left_"
                },
                "interfaceDict": [
                    {
                        "ParentTagName": "ttVlanIf",
                        "ClassName": "VlanIf",
                        "StmPropertyModifierDict": {
                            "VlanId": {
                                "Start": "Left.CreateProtocolMix.VlanId",
                                "Step": "Left.CreateProtocolMix.VlanIdStep"
                            }
                        }
                    },
                    {
                        "ParentTagName": "ttIpv4If",
                        "ClassName": "Ipv4If",
                        "StmPropertyModifierDict": {
                            "Address": {
                                "Start": "Left.CreateProtocolMix.Ipv4Addr",
                                "Step": "Left.CreateProtocolMix.Ipv4AddrStep"
                            },
                            "Gateway": {
                                "Start": "Left.CreateProtocolMix.Ipv4GwAddr",
                                "Step": "Left.CreateProtocolMix.Ipv4GwAddrStep"
                            }
                        }
                    },
                    {
                        "ParentTagName": "ttIpv6If",
                        "ClassName": "Ipv6If",
                        "StmPropertyModifierDict": {
                            "Address": {
                                "Start": "Left.CreateProtocolMix.Ipv6Addr",
                                "Step": "Left.CreateProtocolMix.Ipv6AddrStep"
                            },
                            "Gateway": {
                                "Start": "Left.CreateProtocolMix.Ipv6GwAddr",
                                "Step": "Left.CreateProtocolMix.Ipv6GwAddrStep"
                            }
                        }
                    },
                    {
                        "ParentTagName": "ttLinkLocalIf",
                        "ClassName": "Ipv6If",
                        "StmPropertyModifierDict": {
                            "Address": {
                                "Start": "Left.CreateProtocolMix.LLAddr",
                                "Step": "Left.CreateProtocolMix.LLAddrStep"
                            }
                        }
                    },
                    {
                        "ParentTagName": "ttEmulatedDevice",
                        "ClassName": "EmulatedDevice",
                        "StmPropertyModifierDict": {
                            "RouterId": {
                                "Start": "Left.CreateProtocolMix.Ipv4RtrId",
                                "Step": "Left.CreateProtocolMix.Ipv4RtrIdStep"
                            }
                        }
                    },
                    {
                        "ParentTagName": "ttEthIIIf",
                        "ClassName": "EthIIIf",
                        "StmPropertyModifierDict": {
                            "SourceMac": {
                                "Start": "Left.CreateProtocolMix.MacAddr",
                                "Step": "Left.CreateProtocolMix.MacAddrStep"
                            }
                        }
                    }
                ],
                "protocolDict": [
                    {
                        "ParentTagName": "ttBfdRouterConfig",
                        "ClassName": "BfdRouterConfig",
                        "PropertyValueDict": {
                            "TxInterval": "CreateProtocolMix.BfdTxInterval",
                            "RxInterval": "CreateProtocolMix.BfdRxInterval",
                            "DetectMultiplier": "CreateProtocolMix.BfdDetectMultiplier"
                        }
                    },
                    {
                        "EnableProperty": "Left.CreateProtocolMix.EnableBgp",
                        "ParentTagName": "ttBgpRouterConfig",
                        "ClassName": "BgpRouterConfig",
                        "PropertyValueDict": {
                            "IpVersion": "Left.CreateProtocolMix.BgpIpVersion",
                            "EnableBfd": "Left.CreateProtocolMix.EnableBgpBfd"
                        },
                        "StmPropertyModifierDict": {
                            "AsNum": {
                                "Start": "Left.CreateProtocolMix.BgpAsNum",
                                "Step": "Left.CreateProtocolMix.BgpAsNumStep"
                            },
                            "DutAsNum": {
                                "Start": "Left.CreateProtocolMix.BgpDutAsNum",
                                "Step": "Left.CreateProtocolMix.BgpDutAsNumStep"
                            }
                        }
                    },
                    {
                        "EnableProperty": "Left.CreateProtocolMix.EnableOspfv2",
                        "ParentTagName": "ttOspfv2RouterConfig",
                        "ClassName": "Ospfv2RouterConfig",
                        "PropertyValueDict": {
                            "NetworkType": "Left.CreateProtocolMix.Ospfv2NetworkType",
                            "EnableBfd": "Left.CreateProtocolMix.EnableOspfv2Bfd"
                        },
                        "StmPropertyModifierDict": {
                            "AreaId": {
                                "Start": "Left.CreateProtocolMix.Ospfv2AreaId",
                                "Step": "Left.CreateProtocolMix.Ospfv2AreaIdStep"
                            },
                            "RouterPriority": {
                                "Start": "Left.CreateProtocolMix.Ospfv2RouterPriority",
                                "Step": "1"
                            }
                        }
                    },
                    {
                        "EnableProperty": "Left.CreateProtocolMix.EnableOspfv3",
                        "ParentTagName": "ttOspfv3RouterConfig",
                        "ClassName": "Ospfv3RouterConfig",
                        "PropertyValueDict": {
                            "NetworkType": "Left.CreateProtocolMix.Ospfv3NetworkType",
                            "EnableBfd": "Left.CreateProtocolMix.EnableOspfv3Bfd"
                        },
                        "StmPropertyModifierDict": {
                            "AreaId": {
                                "Start": "Left.CreateProtocolMix.Ospfv3AreaId",
                                "Step": "Left.CreateProtocolMix.Ospfv3AreaIdStep"
                            },
                            "RouterPriority": {
                                "Start": "Left.CreateProtocolMix.Ospfv3RouterPriority",
                                "Step": "1"
                            }
                        }
                    },
                    {
                        "EnableProperty": "Left.CreateProtocolMix.EnableLdp",
                        "ParentTagName": "ttLdpRouterConfig",
                        "ClassName": "LdpRouterConfig",
                        "PropertyValueDict": {
                            "HelloVersion": "Left.CreateProtocolMix.LdpHelloVersion",
                            "EnableBfd": "Left.CreateProtocolMix.EnableLdpBfd"
                        }
                    },
                    {
                        "EnableProperty": "Left.CreateProtocolMix.EnableIsis",
                        "ParentTagName": "ttIsisRouterConfig",
                        "ClassName": "IsisRouterConfig",
                        "PropertyValueDict": {
                            "NetworkType": "Left.CreateProtocolMix.IsisNetworkType",
                            "EnableBfd": "Left.CreateProtocolMix.EnableIsisBfd"
                        },
                        "StmPropertyModifierDict": {
                            "RouterPriority": {
                                "Start": "Left.CreateProtocolMix.IsisRouterPriority",
                                "Step": "1"
                            }
                        }
                    }
                ]
            },
            "output": [
                {
                    "scriptVarName": "TableData",
                    "epKey": "TestMethodologyCreateProtocolMix2Command12MixInfo"
                }
            ]
        }'
       />

      
      <!-- scriptVarName is the name of the output in the output dictionary. -->
      <!-- epKey is the name of the ExposedProperty.EPNameId that the value stored in scriptVarName in the output dictionary will be passed to. -->
    
      <processingDictionary inputDict=
        '{
            "id": "Right.CreateProtocolMix.TableData",
            "scriptFile": "txml_processing_functions.py",
            "entryFunction": "config_protocol_table_data",
            "input": {
                "customDict": {
                    "EnableVlan": "Right.CreateProtocolMix.EnableVlan",
                    "Weight": "Right.CreateProtocolMix.Weight",
                    "DeviceCount": "ScalabilityDeviceCount",
                    "DevPerBlock": "Right.CreateProtocolMix.DevicesPerBlock",
                    "TagPrefix": "Right_"
                },
                "interfaceDict": [
                    {
                        "ParentTagName": "ttVlanIf",
                        "ClassName": "VlanIf",
                        "StmPropertyModifierDict": {
                            "VlanId": {
                                "Start": "Right.CreateProtocolMix.VlanId",
                                "Step": "Right.CreateProtocolMix.VlanIdStep"
                            }
                        }
                    },
                    {
                        "ParentTagName": "ttIpv4If",
                        "ClassName": "Ipv4If",
                        "StmPropertyModifierDict": {
                            "Address": {
                                "Start": "Right.CreateProtocolMix.Ipv4Addr",
                                "Step": "Right.CreateProtocolMix.Ipv4AddrStep"
                            },
                            "Gateway": {
                                "Start": "Right.CreateProtocolMix.Ipv4GwAddr",
                                "Step": "Right.CreateProtocolMix.Ipv4GwAddrStep"
                            }
                        }
                    },
                    {
                        "ParentTagName": "ttIpv6If",
                        "ClassName": "Ipv6If",
                        "StmPropertyModifierDict": {
                            "Address": {
                                "Start": "Right.CreateProtocolMix.Ipv6Addr",
                                "Step": "Right.CreateProtocolMix.Ipv6AddrStep"
                            },
                            "Gateway": {
                                "Start": "Right.CreateProtocolMix.Ipv6GwAddr",
                                "Step": "Right.CreateProtocolMix.Ipv6GwAddrStep"
                            }
                        }
                    },
                    {
                        "ParentTagName": "ttLinkLocalIf",
                        "ClassName": "Ipv6If",
                        "StmPropertyModifierDict": {
                            "Address": {
                                "Start": "Right.CreateProtocolMix.LLAddr",
                                "Step": "Right.CreateProtocolMix.LLAddrStep"
                            }
                        }
                    },
                    {
                        "ParentTagName": "ttEmulatedDevice",
                        "ClassName": "EmulatedDevice",
                        "StmPropertyModifierDict": {
                            "RouterId": {
                                "Start": "Right.CreateProtocolMix.Ipv4RtrId",
                                "Step": "Right.CreateProtocolMix.Ipv4RtrIdStep"
                            }
                        }
                    },
                    {
                        "ParentTagName": "ttEthIIIf",
                        "ClassName": "EthIIIf",
                        "StmPropertyModifierDict": {
                            "SourceMac": {
                                "Start": "Right.CreateProtocolMix.MacAddr",
                                "Step": "Right.CreateProtocolMix.MacAddrStep"
                            }
                        }
                    }
                ],
                "protocolDict": [
                    {
                        "ParentTagName": "ttBfdRouterConfig",
                        "ClassName": "BfdRouterConfig",
                        "PropertyValueDict": {
                            "TxInterval": "CreateProtocolMix.BfdTxInterval",
                            "RxInterval": "CreateProtocolMix.BfdRxInterval",
                            "DetectMultiplier": "CreateProtocolMix.BfdDetectMultiplier"
                        }
                    },
                    {
                        "EnableProperty": "Right.CreateProtocolMix.EnableBgp",
                        "ParentTagName": "ttBgpRouterConfig",
                        "ClassName": "BgpRouterConfig",
                        "PropertyValueDict": {
                            "IpVersion": "Right.CreateProtocolMix.BgpIpVersion",
                            "EnableBfd": "Right.CreateProtocolMix.EnableBgpBfd"
                        },
                        "StmPropertyModifierDict": {
                            "AsNum": {
                                "Start": "Right.CreateProtocolMix.BgpAsNum",
                                "Step": "Right.CreateProtocolMix.BgpAsNumStep"
                            },
                            "DutAsNum": {
                                "Start": "Right.CreateProtocolMix.BgpDutAsNum",
                                "Step": "Right.CreateProtocolMix.BgpDutAsNumStep"
                            }
                        }
                    },
                    {
                        "EnableProperty": "Right.CreateProtocolMix.EnableOspfv2",
                        "ParentTagName": "ttOspfv2RouterConfig",
                        "ClassName": "Ospfv2RouterConfig",
                        "PropertyValueDict": {
                            "NetworkType": "Right.CreateProtocolMix.Ospfv2NetworkType",
                            "EnableBfd": "Right.CreateProtocolMix.EnableOspfv2Bfd"
                        },
                        "StmPropertyModifierDict": {
                            "AreaId": {
                                "Start": "Right.CreateProtocolMix.Ospfv2AreaId",
                                "Step": "Right.CreateProtocolMix.Ospfv2AreaIdStep"
                            },
                            "RouterPriority": {
                                "Start": "Right.CreateProtocolMix.Ospfv2RouterPriority",
                                "Step": "1"
                            }
                        }
                    },
                    {
                        "EnableProperty": "Right.CreateProtocolMix.EnableOspfv3",
                        "ParentTagName": "ttOspfv3RouterConfig",
                        "ClassName": "Ospfv3RouterConfig",
                        "PropertyValueDict": {
                            "NetworkType": "Right.CreateProtocolMix.Ospfv3NetworkType",
                            "EnableBfd": "Right.CreateProtocolMix.EnableOspfv3Bfd"
                        },
                        "StmPropertyModifierDict": {
                            "AreaId": {
                                "Start": "Right.CreateProtocolMix.Ospfv3AreaId",
                                "Step": "Right.CreateProtocolMix.Ospfv3AreaIdStep"
                            },
                            "RouterPriority": {
                                "Start": "Right.CreateProtocolMix.Ospfv3RouterPriority",
                                "Step": "1"
                            }
                        }
                    },
                    {
                        "EnableProperty": "Right.CreateProtocolMix.EnableLdp",
                        "ParentTagName": "ttLdpRouterConfig",
                        "ClassName": "LdpRouterConfig",
                        "PropertyValueDict": {
                            "HelloVersion": "Right.CreateProtocolMix.LdpHelloVersion",
                            "EnableBfd": "Right.CreateProtocolMix.EnableLdpBfd"
                        }
                    },
                    {
                        "EnableProperty": "Right.CreateProtocolMix.EnableIsis",
                        "ParentTagName": "ttIsisRouterConfig",
                        "ClassName": "IsisRouterConfig",
                        "PropertyValueDict": {
                            "NetworkType": "Right.CreateProtocolMix.IsisNetworkType",
                            "EnableBfd": "Right.CreateProtocolMix.EnableIsisBfd"
                        },
                        "StmPropertyModifierDict": {
                            "RouterPriority": {
                                "Start": "Right.CreateProtocolMix.IsisRouterPriority",
                                "Step": "1"
                            }
                        }
                    }
                ]
            },
            "output": [
                {
                    "scriptVarName": "TableData",
                    "epKey": "TestMethodologyCreateProtocolMix2Command13MixInfo"
                }
            ]
        }'
       />
    
    <processingFunction id="Config.CreateProtocolMix.DeviceCount" scriptFile="txml_processing_functions.py" entryFunction="config_device_iterator_value">
      <input srcId="MethTestType" scriptVarName="TestType" />
      <input srcId="ScalabilityDeviceCount" scriptVarName="ScaleDeviceCount" />
      <input srcId="DeviceCountMin" scriptVarName="MinDeviceCount" />
      <input srcId="DeviceCountMax" scriptVarName="MaxDeviceCount" />
      <output scriptVarName="minDev" epKey="TestMethodologyIteratorMinVal" />
      <output scriptVarName="maxDev" epKey="TestMethodologyIteratorMaxVal" />
    </processingFunction>

    <processingFunction id="Left.Config.CreateRouteMix.MixInfo" scriptFile="txml_processing_functions.py" entryFunction="copy_value_to_sequence">
      <input srcId="Left.CreateRouteMix.MixInfo" scriptVarName="InputKey" default=
      '{
            "routeCount": 1000,
            "components": [
                {
                    "baseTemplateFile": "AllRouters.xml",
                    "weight": "100%",
                    "modifyList": [
                        {
                            "mergeList": [
                                {
                                    "mergeSourceTag": "ttBgpIpv4RouteConfig",
                                    "mergeSourceTemplateFile": "AllRoutes.xml",
                                    "mergeTargetTag": "ttBgpRouterConfig"
                                },
                                {
                                    "mergeSourceTag": "ttBgpIpv6RouteConfig",
                                    "mergeSourceTemplateFile": "AllRoutes.xml",
                                    "mergeTargetTag": "ttBgpRouterConfig"
                                }
                            ],
                            "stmPropertyModifierList": [
                                {
                                    "className": "Ipv4NetworkBlock",
                                    "propertyName": "StartIpList",
                                    "parentTagName": "ttBgpIpv4RouteConfig.Ipv4NetworkBlock",
                                    "propertyValueList": {
                                        "Start": "135.135.33.135",
                                        "Step": "0.1.0.0"
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "baseTemplateFile": "BGP_Import_Routes.xml",
                    "weight": "1000",
                    "modifyList": [
                        {
                            "propertyValueList": [
                                {
                                    "className": "BgpImportRouteTableParams",
                                    "tagName": "ttBgpImportRouteTableParams",
                                    "propertyValueList": {
                                        "FileName": "bgp_fullroute.txt"
                                    }
                                }
                            ]
                        }
                    ],
                    "postExpandModify": [
                        {
                            "bllWizardExpand": {
                                "targetTagList": [
                                    "Left_ttEmulatedDevice"
                                ],
                                "srcObjectTagName": "ttBgpImportRouteTableParams",
                                "createdRoutesTagName": "ttBgpImportedRoutes",
                                "commandName": "spirent.methodology.routing.BgpImportRoutesCommand"
                            }
                        }
                    ]
                },
                {
                    "baseTemplateFile": "AllRoutePrefixDist.xml",
                    "weight": "999",
                    "postExpandModify": [
                        {
                            "bllWizardExpand": {
                                "targetTagList": [
                                    "Left_ttEmulatedDevice"
                                ],
                                "srcObjectTagName": "ttBgpRouteGenParamsIpv4",
                                "createdRoutesTagName": "ttBgpRouteObjectPrefixDist",
                                "commandName": "spirent.methodology.routing.RoutePrefixDistributionCommand"
                            }
                        }
                    ]
                },
                {
                    "baseTemplateFile": "AllRoutePrefixDist.xml",
                    "weight": "1000",
                    "postExpandModify": [
                        {
                            "bllWizardExpand": {
                                "targetTagList": [
                                    "Left_ttEmulatedDevice"
                                ],
                                "srcObjectTagName": "ttOspfv3LsaGenParamsIntraArea",
                                "createdRoutesTagName": "ttOspfv3RouteObjectPrefixDist",
                                "commandName": "spirent.methodology.routing.RoutePrefixDistributionCommand"
                            }
                        }
                    ]
                }
            ]
        }'
      />
      <output scriptVarName="OutputKey" epKey="RoutingCreateRouteMixCommand1MixInfo" />
    </processingFunction>
    
    
    <processingFunction id="Right.Config.CreateRouteMix.MixInfo" scriptFile="txml_processing_functions.py" entryFunction="copy_value_to_sequence">
      <input srcId="Right.CreateRouteMix.MixInfo" scriptVarName="InputKey" default=
      '{
            "routeCount": 1000,
            "components": [
                {
                    "baseTemplateFile": "AllRouters.xml",
                    "weight": "100%",
                    "modifyList": [
                        {
                            "mergeList": [
                                {
                                    "mergeSourceTag": "ttBgpIpv4RouteConfig",
                                    "mergeSourceTemplateFile": "AllRoutes.xml",
                                    "mergeTargetTag": "ttBgpRouterConfig"
                                },
                                {
                                    "mergeSourceTag": "ttBgpIpv6RouteConfig",
                                    "mergeSourceTemplateFile": "AllRoutes.xml",
                                    "mergeTargetTag": "ttBgpRouterConfig"
                                }
                            ],
                            "stmPropertyModifierList": [
                                {
                                    "className": "Ipv4NetworkBlock",
                                    "propertyName": "StartIpList",
                                    "parentTagName": "ttBgpIpv4RouteConfig.Ipv4NetworkBlock",
                                    "propertyValueList": {
                                        "Start": "135.135.33.135",
                                        "Step": "0.1.0.0"
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "baseTemplateFile": "BGP_Import_Routes.xml",
                    "weight": "1000",
                    "modifyList": [
                        {
                            "propertyValueList": [
                                {
                                    "className": "BgpImportRouteTableParams",
                                    "tagName": "ttBgpImportRouteTableParams",
                                    "propertyValueList": {
                                        "FileName": "bgp_fullroute.txt"
                                    }
                                }
                            ]
                        }
                    ],
                    "postExpandModify": [
                        {
                            "bllWizardExpand": {
                                "targetTagList": [
                                    "Right_ttEmulatedDevice"
                                ],
                                "srcObjectTagName": "ttBgpImportRouteTableParams",
                                "createdRoutesTagName": "ttBgpImportedRoutes",
                                "commandName": "spirent.methodology.routing.BgpImportRoutesCommand"
                            }
                        }
                    ]
                },
                {
                    "baseTemplateFile": "AllRoutePrefixDist.xml",
                    "weight": "999",
                    "postExpandModify": [
                        {
                            "bllWizardExpand": {
                                "targetTagList": [
                                    "Right_ttEmulatedDevice"
                                ],
                                "srcObjectTagName": "ttBgpRouteGenParamsIpv4",
                                "createdRoutesTagName": "ttBgpRouteObjectPrefixDist",
                                "commandName": "spirent.methodology.routing.RoutePrefixDistributionCommand"
                            }
                        }
                    ]
                },
                {
                    "baseTemplateFile": "AllRoutePrefixDist.xml",
                    "weight": "1000",
                    "postExpandModify": [
                        {
                            "bllWizardExpand": {
                                "targetTagList": [
                                    "Right_ttEmulatedDevice"
                                ],
                                "srcObjectTagName": "ttOspfv3LsaGenParamsIntraArea",
                                "createdRoutesTagName": "ttOspfv3RouteObjectPrefixDist",
                                "commandName": "spirent.methodology.routing.RoutePrefixDistributionCommand"
                            }
                        }
                    ]
                }
            ]
        }'
      />
      <output scriptVarName="OutputKey" epKey="RoutingCreateRouteMixCommand2MixInfo" />
    </processingFunction>

    <processingDictionary inputDict=
        '{
            "id": "Config.ExpandRouteMix.RouteCount",
            "scriptFile": "txml_processing_functions.py",
            "entryFunction": "copy_input_to_sequence",
            "input": {
                "InputKey": "TotalRouteCount"
            },
            "output": [
                {
                    "scriptVarName": "OutputKey",
                    "epKey": "RoutingExpandRouteMixCommand1RouteCount"
                },
                {
                    "scriptVarName": "OutputKey",
                    "epKey": "RoutingExpandRouteMixCommand3RouteCount"
                }
            ]
        }'
    />

    <processingFunction id="Left.Config.CreateTrafficMix.MixInfo" scriptFile="txml_processing_functions.py" entryFunction="copy_value_to_sequence">
      <input srcId="Left.CreateTrafficMix.MixInfo" scriptVarName="InputKey" default=
      '{
        "load": 1,
        "loadUnits": "PERCENT_LINE_RATE",
        "components": [
            {
                "weight": "100%",
                "baseTemplateFile": "IPv4_Stream.xml",
                "postExpandModify": [
                    {
                        "streamBlockExpand": {
                            "endpointMapping": {
                                "bidirectional": false,
                                "srcBindingClassList": [
                                    "Ipv4NetworkBlock"
                                ],
                                "srcBindingTagList": [
                                    "Left_ttStmRouteMix"
                                ],
                                "dstBindingClassList": [
                                    "Ipv4NetworkBlock"
                                ],
                                "dstBindingTagList": [
                                    "Right_ttStmRouteMix"
                                ]
                            }
                        }
                    }
                ]
            }
        ]
      }'
      />
      <output scriptVarName="OutputKey" epKey="TrafficCreateTrafficMixCommand2MixInfo" />
    </processingFunction>

    <processingFunction id="Right.Config.CreateTrafficMix.MixInfo" scriptFile="txml_processing_functions.py" entryFunction="copy_value_to_sequence">
      <input srcId="Right.CreateTrafficMix.MixInfo" scriptVarName="InputKey" default=
      '{
        "load": 1,
        "loadUnits": "PERCENT_LINE_RATE",
        "components": [
            {
                "weight": "100%",
                "baseTemplateFile": "IPv4_Stream.xml",
                "postExpandModify": [
                    {
                        "streamBlockExpand": {
                            "endpointMapping": {
                                "bidirectional": false,
                                "srcBindingClassList": [
                                    "Ipv4NetworkBlock"
                                ],
                                "srcBindingTagList": [
                                    "Right_ttStmRouteMix"
                                ],
                                "dstBindingClassList": [
                                    "Ipv4NetworkBlock"
                                ],
                                "dstBindingTagList": [
                                    "Left_ttStmRouteMix"
                                ]
                            }
                        }
                    }
                ]
            }
        ]
      }'
      />
      <output scriptVarName="OutputKey" epKey="TrafficCreateTrafficMixCommand3MixInfo" />
    </processingFunction>

    <processingDictionary inputDict=
        '{
            "id": "Config.ExpandTrafficMix.Load",
            "scriptFile": "txml_processing_functions.py",
            "entryFunction": "copy_input_to_sequence",
            "input": {
                "InputKey": "SetTrafficLoadUnit"
            },
            "output": [
                {
                    "scriptVarName": "OutputKey",
                    "epKey": "TrafficExpandTrafficMixCommand1LoadUnit"
                },
                {
                    "scriptVarName": "OutputKey",
                    "epKey": "TrafficExpandTrafficMixCommand2LoadUnit"
                }
            ]
        }'
    />

    <processingDictionary inputDict=
        '{
            "id": "Config.ExpandTrafficMix.LoadUnit",
            "scriptFile": "txml_processing_functions.py",
            "entryFunction": "copy_input_to_sequence",
            "input": {
                "InputKey": "SetTrafficLoad"
            },
            "output": [
                {
                    "scriptVarName": "OutputKey",
                    "epKey": "TrafficExpandTrafficMixCommand1Load"
                },
                {
                    "scriptVarName": "OutputKey",
                    "epKey": "TrafficExpandTrafficMixCommand2Load"
                }
            ]
        }'
    />
  </processingFunctions>  
</test>
